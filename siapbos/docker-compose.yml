version: '3.8'
services:
  # MySQL Database
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: memo_db
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - memo_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -proot"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Node.js API
  api:
    build: .
    container_name: node_api
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    working_dir: /app
    command: npx ts-node-dev --respawn --transpile-only src/index.ts
    environment:
      - NODE_ENV=development
    depends_on:
      - mysql
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - memo_network

  # MySQL Exporter
  mysql_exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysql_exporter
    volumes:
      - ./mysql_exporter/.my.cnf:/etc/mysql/my.cnf:ro
    command:
      - "--config.my-cnf=/etc/mysql/my.cnf"
    ports:
      - "9104:9104"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - memo_network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - memo_network
    depends_on:
      mysql_exporter:
        condition: service_started

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_SECURITY_ALLOW_EMBEDDING: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - type: bind
        source: ./grafana/grafana.ini
        target: /etc/grafana/grafana.ini
    networks:
      - memo_network
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    volumes:
      - '/:/host:ro'
    pid: host
    restart: unless-stopped
    networks:
      - memo_network

volumes:
  db-data:
  prometheus_data:
  grafana_data:

networks:
  memo_network:
    driver: bridge
